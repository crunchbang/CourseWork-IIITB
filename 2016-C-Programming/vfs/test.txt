Make is an ancient part of Unix, said to have been present even when dinosaurs roamed the earth. Today, it is still widely used, shipped with every Unix out there in one form or another.

While it's certainly ancient, warty, and far from perfect, it is still a good choice for building software and running dependent commands.

There are many, many tutorials in the wild describing the basic use of Make. This document won't try to duplicate them. Instead, I would like to lay out some suggestions on how to write clean, maintainable, predictable makefiles. These rules can be summarized as follows:

Follow Conventions
Don't surprise people. Instead, provide a familiar interface.
Factor out common code
Make has acceptably good support for factoring rules out into libraries. Use these facilities
Autogenerate Dependencies
Nothing's more annoying than a makefile that fails to rebuild code when it needs to. Writing out dependencies by hand is not only tedious, but also bug prone. Compilers can often integrate with make to solve this issue.
